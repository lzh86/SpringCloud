spring:
  application:
    name: coupon-calculation
  cloud:
    nacos:
      config:
        server-addr: 10.51.130.155:8848
        file-extension: yaml
        # prefix: 文件名前缀，默认是spring.application.name
        # 如果没有指定命令空间，则默认命令空间为PUBLIC
        namespace: cb069004-3f8d-4314-ad4f-18b860049a1f
        # 如果没有配置Group，则默认值为DEFAULT_GROUP
        group: DEFAULT_GROUP
        # 从Nacos读取配置项的超时时间
        timeout: 5000
        # 长轮训超时时间
        config-long-poll-timeout: 1000
        # 重试时间
        config-retry-time: 100000
        # 长轮训重试次数
        max-retry: 3
        # 开启监听和自动刷新
        refresh-enabled: true
        # Nacos的扩展配置项，数字越大优先级越高
        enable-remote-sync-config: true
        extension-configs:
          # 可以添加其他节点
          - dataId: rabbitmq-config.yml
            group: EXT_GROUP
            refresh: true
      discovery:
        # 可以配置多个，逗号分隔
        server-addr: 10.51.130.155:8848
        # 默认就是application name，一般不用配置
        service: coupon-calculation
        # nacos客户端向服务端发送心跳的时间间隔，时间单位其实是ms
        heart-beat-interval: 5000
        # 服务端没有接受到客户端心跳请求就将其设为不健康的时间间隔，默认为15s
        # 注：推荐值该值为15s即可，如果有的业务线希望服务下线或者出故障时希望尽快被发现，可以适当减少该值
        heart-beat-timeout: 20000
        # [注意] 这个IP地址如果更换网络后变化，会导致服务调用失败，建议先不要设置
        # ip: 172.20.7.228
        # 元数据部分 - 可以自己随便定制
        metadata:
          mydata: abc
        # 客户端在启动时是否读取本地配置项(一个文件)来获取服务列表
        # 注：推荐该值为false，若改成true。则客户端会在本地的一个文件中保存服务信息，当下次宕机启动时，会优先读取本地的配置对外提供服务。
        naming-load-cache-at-start: false
        # 创建不同的集群
        cluster-name: Cluster-A
        # 命名空间ID，Nacos通过不同的命名空间来区分不同的环境，进行数据隔离，
        # 服务消费时只能消费到对应命名空间下的服务。
        # [注意]需要在nacos-server中创建好namespace，然后把id copy进来
        namespace: cb069004-3f8d-4314-ad4f-18b860049a1f
        # [注意]两个服务如果存在上下游调用关系，必须配置相同的group才能发起访问
        group: myGroup
        # 向注册中心注册服务，默认为true
        # 如果只消费服务，不作为服务提供方，倒是可以设置成false，减少开销
        register-enabled: true
        # 类似长连接监听服务端信息变化的功能
        watch:
          enabled: true
        watch-delay: 30000
    sentinel:
      transport:
        # sentinel api端口，默认8719
        port: 8719
        # dashboard地址
        dashboard: localhost:8080
      datasource:
        # 限流的规则key是flow
        geekbang-flow:
          nacos:
            server-addr: localhost:8848
            namespace: cb069004-3f8d-4314-ad4f-18b860049a1f
            groupId: SENTINEL_GROUP
            dataId: ${spring.application.name}-flow-rules
            rule-type: flow

# 项目的启动端口
server:
  port: 20001
#  servlet:
#    context-path: /coupon-calculation


redis:
  database: 0
  host: localhost
  port: 6379
  # password:
  # 连接超时时间
  timeout: 10000

logging:
  level:
    com.broadview.coupon: debug

# 开启所有management端点
management:
  endpoints:
    web:
      exposure:
        include: "*"


